// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo para usuarios
model User {
  id           String       @id @default(cuid())
  email        String       @unique
  name         String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  simulations  Simulation[]
  leanCanvases LeanCanvas[]
}

// Modelo para el Lean Canvas
model LeanCanvas {
  id               String       @id @default(cuid())
  name             String
  description      String?
  problem          String?      @db.Text
  solution         String?      @db.Text
  uniqueValueProp  String?      @db.Text
  keyMetrics       String?      @db.Text
  unfairAdvantage  String?      @db.Text
  channels         String?      @db.Text
  customerSegments String?      @db.Text
  costStructure    String?      @db.Text
  revenueStreams   String?      @db.Text
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  userId           String
  user             User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  simulations      Simulation[]
}

// Modelo para simulaciones financieras
model Simulation {
  id                String      @id @default(cuid())
  name              String
  description       String?
  initialInvestment Float
  monthlyExpenses   Float
  avgRevenue        Float
  growthRate        Float
  timeframeMonths   Int
  otherParams       Json?
  results           Json?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  userId            String
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  leanCanvasId      String?
  leanCanvas        LeanCanvas? @relation(fields: [leanCanvasId], references: [id], onDelete: SetNull)
}
